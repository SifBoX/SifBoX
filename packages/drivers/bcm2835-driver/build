#!/bin/sh

. config/options

get_meta $1
cd $PKG_BUILD_DIR

[ "$ARM_HARDFLOAT_ABI" = yes ] && VC=hardfp/opt/vc || VC=opt/vc

mkdir -p .install/usr/include
mkdir -p .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libEGL.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libGLESv2.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libbcm_host.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libcontainers.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libopenmaxil.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libvchiq_arm.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libvcos.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libmmal.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libmmal_components.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libmmal_core.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libmmal_util.so .install/usr/lib
    cp -PRv $VC/opt/vc/lib/libmmal_vc_client.so .install/usr/lib

mkdir -p .install/usr/sbin
    cp -PRv $VC/opt/vc/sbin/vcfiled .install/usr/sbin
mkdir -p .install/usr/bin
    cp -PRv $VC/opt/vc/bin/vcdbg .install/usr/bin
    cp -PRv $VC/opt/vc/lib/libdebug_sym.so .install/usr/lib
    cp -PRv $VC/opt/vc/bin/vcgencmd .install/usr/bin
    cp -PRv $VC/opt/vc/bin/tvservice .install/usr/bin
    cp -PRv $VC/opt/vc/bin/edidparser .install/usr/bin

  mkdir -p .install/opt/vc
    ln -sf /usr/lib .install/opt/vc/lib













cp -P boot/*.elf boot/*.dat boot/bootcode.bin .install/boot/
echo "$DISTRONAME $TARGET_ARCH $DISTRO_VERSION $DISTRO_COPYRIGHT" \
  > .install/boot/issue.txt

if [ "$RPI_SDTV_COLORBURST" = yes ]; then
  no_colorburst=0
else
  no_colorburst=1
fi
cat > .install/boot/config.txt <<EOF
sdtv_mode=$RPI_SDTV_MODE
sdtv_aspect=$RPI_SDTV_ASPECT
sdtv_disable_colourburst=$no_colorburst

#hdmi_ignore_cec_init=1

EOF

if [ -n "$RPI_MPEG2_LICENSE" ]; then
  echo "decode_MPG2=$RPI_MPEG2_LICENSE" >> .install/boot/config.txt
else
  echo "#decode_MPG2=0x00000000" >> .install/boot/config.txt
fi

if [ -n "$RPI_VC1_LICENSE" ]; then
  echo "decode_WVC1=$RPI_VC1_LICENSE" >> .install/boot/config.txt
else
  echo "#decode_WVC1=0x00000000" >> .install/boot/config.txt
fi

CMDLINE="dwc_otg.lpm_enable=0 console=ttyAMA0,115200 root=/dev/mmcblk0p2 rootfstype=ext4 rootwait vt.global_cursor_default=0"
if [ "$RPI_USE_CMA" = yes ]; then
  CMDLINE="$CMDLINE coherent_pool=2M cma=2M smsc95xx.turbo_mode=N"
  cat >> .install/boot/config.txt <<EOF

gpu_mem_256=160
gpu_mem_512=316
cma_lwm=16
cma_hwm=32
EOF
fi

echo "$CMDLINE" > .install/boot/cmdline.txt

#cp $ROOT/$PACKAGES/$PKG_SECTION/$1/bootloader/* .install/boot
cp $ROOT/$PACKAGES/$PKG_SECTION/$1/bootloader/config.txt .install/boot

